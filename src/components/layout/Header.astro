---
import { Icon } from 'astro-icon/components';

const navLinks = [
  { href: "/PortfolioArquitectoAstro", label: "Inicio", icon: "mdi:home" },
  { href: "/PortfolioArquitectoAstro/projects", label: "Proyectos", icon: "portfolio/Proyecto" },
  { href: "/PortfolioArquitectoAstro/contacto", label: "Contacto", icon: "mdi:email" },
];
---

<nav id="mainNavbar" class="fixed w-full top-0 z-50 bg-cream-100/30 backdrop-blur-md transition-all duration-300 py-4 shadow-sm">
    <div class="container mx-auto px-4 md:px-6">
        <div class="flex items-center justify-between h-16">
            <!-- Logo -->
            <a href="/PortfolioArquitectoAstro" class="flex items-center text-primary-600 text-lg font-semibold transition hover:text-accent-500 hover:-translate-y-1">
                <Icon class="w-7 h-7 mr-2" name="logo" />
                <span class="tracking-wide">Arquitecto</span>
            </a>

            <!-- Mobile menu button -->
            <button 
                id="mobileMenuBtn"
                class="md:hidden relative w-10 h-10 flex justify-center items-center rounded-lg bg-cream-200 text-cream-800 backdrop-blur-md shadow-sm border border-cream-400 transition hover:bg-primary-100 active:scale-95"
            >
                <span class="line block absolute w-6 h-[2px] bg-cream-900 rounded transition-all duration-300" />
                <span class="line block absolute w-6 h-[2px] bg-cream-900 rounded transition-all duration-300" />
            </button>

            <!-- Desktop Navigation -->
            <div class="hidden md:flex items-center space-x-6">
                {navLinks.map(link => (
                    <a href={link.href} class="flex items-center gap-2 text-cream-900 font-medium px-3 py-2 rounded-full transition hover:bg-primary-100 hover:text-primary-600 hover:-translate-y-1 relative overflow-hidden">
                        <span class="flex items-center">
                            <Icon class="w-5 h-5 mr-2" name={link.icon} />
                            {link.label}
                        </span>
                    </a>
                ))}
            </div>

            <!-- Mobile Navigation -->
            <div class="mobile-menu hidden md:hidden backdrop-blur-lg absolute top-full left-0 right-0 bg-cream-200/90 shadow-md transition-all duration-500 ease-out opacity-0 -translate-y-5">
                <div class="container mx-auto px-6 py-4">
                    <div class="flex flex-col space-y-3 text-center text-base">
                        {navLinks.map(link => (
                            <a href={link.href} class="px-4 py-3 rounded-lg transition hover:bg-primary-100 hover:text-primary-600">
                                {link.label}
                            </a>
                        ))}
                    </div>
                </div>
            </div>
        </div>
    </div>
</nav>

<script is:inline>
    (function () {
        let controller;

        function setupNavbar() {
            controller?.abort();
            controller = new AbortController();
            const { signal } = controller;

            const btn = document.getElementById("mobileMenuBtn");
            const menu = document.querySelector(".mobile-menu");
            const navbar = document.getElementById("mainNavbar");

            if (!btn || !menu) return;

            function instantClose() {
                btn.classList.remove("active");
                menu.classList.add("hidden", "opacity-0", "-translate-y-5");
                menu.classList.remove("opacity-100", "translate-y-0");
            }

            function openMenu() {
                btn.classList.add("active");
                menu.classList.remove("hidden");
                requestAnimationFrame(() => {
                    menu.classList.add("opacity-100", "translate-y-0");
                    menu.classList.remove("opacity-0", "-translate-y-5");
                });
            }

            function closeMenu() {
                btn.classList.remove("active");
                menu.classList.remove("opacity-100", "translate-y-0");
                menu.classList.add("opacity-0", "-translate-y-5");

                let ended = false;
                const onEnd = () => {
                    if (ended) return;
                    ended = true;
                    menu.classList.add("hidden");
                };

                menu.addEventListener("transitionend", onEnd, { once: true, signal });
                setTimeout(onEnd, 350); 
            }

            btn.addEventListener("click", () => {
                if (menu.classList.contains("hidden")) openMenu();
                    else closeMenu();
                }, { signal } 
            );

            menu.querySelectorAll("a").forEach((a) => {
                a.addEventListener("click", closeMenu, { signal });
            });

            function onScroll() {
                if (window.scrollY > 100) {
                    navbar?.classList.add("shadow-md", "backdrop-blur-xl");
                } else {
                    navbar?.classList.remove("shadow-md", "backdrop-blur-xl");
                }
            }
            window.addEventListener("scroll", onScroll, { signal });
            onScroll();

            document.addEventListener("astro:before-swap", instantClose, { signal });
        }

        document.addEventListener("astro:page-load", setupNavbar);
    })();
</script>

<style>
    #mobileMenuBtn .line:nth-child(1) {
        transform: translateY(-5px);
    }

    #mobileMenuBtn .line:nth-child(2) {
        transform: translateY(5px);
    }

    #mobileMenuBtn.active .line:nth-child(1) {
        transform: rotate(45deg);
    }
    
    #mobileMenuBtn.active .line:nth-child(2) {
        transform: rotate(-45deg);
    }
</style>